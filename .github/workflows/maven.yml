name: Java Code Quality Checks

on:
  push:
    branches: [ '**' ]  # Matches all branches
  pull_request:
    branches: [ '**' ]  # Matches all branches for pull requests

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run Checkstyle, PMD, and SpotBugs
        run: mvn clean verify -DskipTests

      - name: Upload PMD report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: pmd-report
          path: target/site/pmd.html

      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: spotbugs-report
          path: target/site/spotbugs.html

      - name: Comment on PR with issues
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && (success() || failure())
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let comment = "## Code Quality Report\n\n";
            
            try {
              // Check if PMD found issues
              const pmdOutput = require('child_process').execSync('grep -c "<violation" target/pmd.xml || true').toString().trim();
              const pmdCount = parseInt(pmdOutput) || 0;
              comment += `🔍 PMD found ${pmdCount} issue(s)\n\n`;
            
              // Check if SpotBugs found issues
              const spotbugsOutput = require('child_process').execSync('grep -c "<BugInstance" target/spotbugsXml.xml || true').toString().trim();
              const spotbugsCount = parseInt(spotbugsOutput) || 0;
              comment += `🐞 SpotBugs found ${spotbugsCount} issue(s)\n\n`;
            
              comment += "Full reports are available in the workflow artifacts.";
            
            } catch (error) {
              comment += "⚠️ Error generating detailed report.\n\n";
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });